// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Application {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  program   String
  message   String?
  status    String   @default("pending") // pending, contacted, enrolled, rejected
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([status])
  @@index([program])
  @@index([createdAt])
  @@map("applications")
}

model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  published   Boolean  @default(false)
  featured    Boolean  @default(false)
  tags        String?
  authorId    String
  author      Author   @relation(fields: [authorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([slug])
  @@index([published])
  @@index([featured])
  @@index([authorId])
  @@index([createdAt])
  @@index([tags])
  @@map("blog_posts")
}

model Author {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  bio       String?
  avatar    String?
  posts     BlogPost[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([email])
  @@map("authors")
}

model Admin {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   @default("admin") // admin, super_admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([username])
  @@index([email])
  @@map("admins")
}

model TeamMember {
  id        String   @id @default(cuid())
  name      String
  position  String
  bio       String
  image     String?
  email     String?  @unique
  linkedin  String?
  twitter   String?
  order     Int      @default(0)
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([active])
  @@index([order])
  @@index([email])
  @@map("team_members")
}

model Program {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String
  content     String
  duration    String
  level       String
  price       Float?
  image       String?
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([slug])
  @@index([active])
  @@map("programs")
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  active    Boolean  @default(true)
  createdAt DateTime @default(now())

  @@index([email])
  @@index([active])
  @@index([createdAt])
  @@map("newsletter")
}

model Resource {
  id          String   @id @default(cuid())
  title       String   @unique
  description String
  type        String   // PDF Guide, Templates, Worksheet, Checklist
  pages       String?  // "25 pages", "15 templates", etc.
  downloads   Int      @default(0)
  highlights  String   // JSON string of highlights array
  fileUrl     String?  // URL to the actual file
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([title])
  @@index([type])
  @@index([active])
  @@index([downloads])
  @@map("resources")
}

model AuditLog {
  id          String   @id @default(cuid())
  action      String
  resource    String
  resourceId  String
  userId      String
  userType    String   // 'admin' or 'user'
  details     String   // JSON string
  ipAddress   String
  userAgent   String
  timestamp   DateTime @default(now())

  @@index([action])
  @@index([resource])
  @@index([userId])
  @@index([userType])
  @@index([timestamp])
  @@map("audit_logs")
}